---
- hosts: server
  tasks:
  - name: Install Docker
    become: yes
    apt:
      name: docker.io
      state: present
  - name: Start service docker, if not started
    become: yes
    service:
      name: docker
      state: started
      enabled: yes
  - name: Install Pip
    become: yes
    apt:
      name: python3-pip
      state: present 
  - name: install py docker
    pip:
      name: docker
  - name: install py docker compose
    pip:
      name: docker-compose
  - name: Log into private registry and force re-authorization
    community.docker.docker_login:
      registry_url: docker.pkg.github.com
      username: "{{ lookup('env','REGISTRY_USER') }}"
      password: "{{ lookup('env','REGISTRY_PASS') }}"
      reauthorize: yes
  - name: Start services
    community.docker.docker_compose:
      project_name: hofc
      pull: yes
      definition:
        version: '3'
        services:
          reverse-proxy:
            image: traefik:v2.4
            restart: unless-stopped
            environment:
              TRAEFIK_PROVIDERS_DOCKER: 'true'
              TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: 'false'
              TRAEFIK_ENTRYPOINTS_WEB_ADDRESS: ":443"
              TRAEFIK_CERTIFICATESRESOLVERS_MYRESOLVER: 'false'
              TRAEFIK_CERTIFICATESRESOLVERS_MYRESOLVER_ACME_CASERVER: https://acme-v02.api.letsencrypt.org/directory
              TRAEFIK_CERTIFICATESRESOLVERS_MYRESOLVER_ACME_EMAIL: "{{ lookup('env','ACME_EMAIL') }}"
              TRAEFIK_CERTIFICATESRESOLVERS_MYRESOLVER_ACME_STORAGE: acme.json
              TRAEFIK_CERTIFICATESRESOLVERS_MYRESOLVER_ACME_DNSCHALLENGE_PROVIDER: ovh
              OVH_ENDPOINT: "ovh-eu"
              OVH_APPLICATION_KEY: "{{ lookup('env','OVH_APPLICATION_KEY') }}"
              OVH_APPLICATION_SECRET: "{{ lookup('env','OVH_APPLICATION_SECRET') }}"
              OVH_CONSUMER_KEY: "{{ lookup('env','OVH_CONSUMER_KEY') }}"
            labels:
              - "traefik.enable=true"
              - "traefik.http.routers.traefik-secure.tls=true"
              - "traefik.http.routers.traefik-secure.rule=Host(`traefik.hofc.maladot-developer.ovh`)"
              - "traefik.http.routers.traefik-secure.tls.certresolver=myresolver"
              - "traefik.http.routers.traefik-secure.tls.domains[0].main=*.hofc.maladot-developer.ovh"
              - "traefik.http.routers.traefik-secure.tls.domains[0].sans=hofc.maladot-developer.ovh"
            ports:
              - "8443:443"
            volumes:
              # So that Traefik can listen to the Docker events
              - /var/run/docker.sock:/var/run/docker.sock
              - /opt/letsencrypt:/letsencrypt
          fff-system:
            image: docker.pkg.github.com/orome656/fff-system-api/fff-system-api:latest
            restart: unless-stopped
            labels:
              - "traefik.enable=true"
              - "traefik.http.routers.fff-system.rule=Host(`fff-system.hofc.maladot-developer.ovh`)"
              - "traefik.http.routers.fff-system.entrypoints=web"
              - "traefik.http.services.fff-system.loadbalancer.server.port=5000"
              - "traefik.http.routers.fff-system.tls=true"
            environment:
              api_user: "{{ lookup('env','API_USER') }}"
              api_password: "{{ lookup('env','API_PASSWORD') }}"
              fff_client_id: "{{ lookup('env','FFF_CLIENT_ID') }}"
              fff_client_secret: "{{ lookup('env','FFF_CLIENT_SECRET') }}"
              fff_username: "{{ lookup('env','FFF_USERNAME') }}"
              fff_password: "{{ lookup('env','FFF_PASSWORD') }}"
              fff_token_password: "{{ lookup('env','FFF_TOKEN_PASSWORD') }}"
          hofc-front:
            image: docker.pkg.github.com/orome656/hofc-front/hofc-front:latest
            restart: unless-stopped
            labels:
              - "traefik.enable=true"
              - "traefik.http.routers.hofc.rule=Host(`front.hofc.maladot-developer.ovh`)"
              - "traefik.http.routers.hofc.entrypoints=web"
              - "traefik.http.services.hofc.loadbalancer.server.port=80"
              - "traefik.http.routers.hofc.tls=true"
              #- "traefik.http.middlewares.hofc.basicauth.users=antho:{SHA}M+PYH8wxccvBdg2zq7sBbP6c4WQ="
              - "traefik.http.routers.hofc.middlewares=hofc"
